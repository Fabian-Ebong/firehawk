# ~/.bashrc

# The contents of vagrant.template are modified by update_vars.sh.
# Editing these contents should only be done in secrets/vagrant, and then propogated with source ./update_vars.sh --dev

# WARNING: When editing your config and secrets files manually never store any secrets / sensitive information in #commented lines in these files.  
# Do not store any secrets as keys in any lines. eg: myactualpassword=
# Do not put real world sensitive information in the example comments.
# Commented lines are passed back into the firehawk repo to update templates for other collaborators.
# Secrets should only ever be stored as VALUES in uncommented lines.

# SECRETS INITIALIZATION #

# Secrets must be used as values only, only the values are kept private.
# Comments and keys/variable names are read from your private secrets/vagrant file in your private repo to auto generate the public firehawk/secrets.template file when running 'source ./update_vars.sh --dev'.

# If these steps are followed then no private values will be or should be propogated into the public repo firehawk/secrets.template file.
# Before making any commits to the public firehawk submodule, ensure there are no secrets / sensitive information contained in those commits.
# Be sure to provide any new variable keys you may end up adding with a commented out description with example values or valid default values above your actual secret value used to assist others (demonstrated below).

# New comments should be only added in /secrets/{var-file} as these lines will be propogated into the {var-file}.template schema used to initialise any new secrets/{var-file} file.  This occurs automatically whenever running:
# source ./update_vars.sh --dev

# BEGIN CONFIGURATION #

# TF_VAR_vault_key_name_general:
# The name of the key file to generate for ansible vault to encrypt/decrypt secrets.
# If this file doesn't exist it will be created with some key used to encrypt and decrypt secrets in combination with a password.
# The password and this keyfile are both needed to decrypt secrets.
# These keyfiles should not be committed to version control, but should be backed up on an encrypted volume.
# As they are rotated over time, these keyfiles will be needed in the future if you need to decrypt previous commits of your secrets.
# If you suspect any breach or if any accidental commits of unencrypted secret values are made, you should:
# 1) At the very least, any cloud (AWS) secret keys must be destroyed/rotated IMMEDIATELY from your AWS console in your dev and production environments.
# 2) Destroy all infrastructure, Decrypt all secrets variable files, change all passwords and keys contained in them to prepare for encryption with a new key.
# 3) Specify a new key name here (usually with todays date), and encrypt your secrets again with this new key file and password.
# 4) This process should be applied to both dev and production environments as soon as possible.
# Automation of key/pass rotation without destroying/rebuilding infrastructure will be possible in the future.
# default: TF_VAR_vault_key_name_general=.vault-key-20191208-general
TF_VAR_vault_key_name_general=insertvalue

# TF_VAR_bridgenic: 
# The network interface that virtual box will use to bridge it's connection 
# See https://www.vagrantup.com/docs/networking/public_network.html
# You can find the string to enter here by running the command:
# VBoxManage list bridgedifs | grep ^Name
# eg 1: TF_VAR_bridgenic=eth1
# eg 2: TF_VAR_bridgenic=eno1
# eg 3: TF_VAR_bridgenic=enp9s0f1
# eg 4: TF_VAR_bridgenic='en0: Wi-Fi (Wireless)'
# default: TF_VAR_bridgenic=none
TF_VAR_bridgenic=insertvalue

# TF_VAR_timezone_localpath: 
# The Ubuntu file path to configure time / date for your current onsite timezone
# eg 1: TF_VAR_timezone_localpath=/usr/share/zoneinfo/Australia/Sydney
TF_VAR_timezone_localpath=insertvalue

# TF_VAR_network: [public/private].  
# Determines if the vagrant network is publicly available to other nodes in your location.  If network is set to private,
# the IP is internal to the host that runs vagrant.  If public, a mac address will be used for dhcp on the network when 
# and other nodes will be able to reach this system.  public is usually desirable unless testing in a less controlled 
# environment (not recommended) or there is no need to connect with any other systems like a NAS or workstation onsite.
# default: TF_VAR_network=public
TF_VAR_network=insertvalue
