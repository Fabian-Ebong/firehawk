# example local install



# ssh-agent bash
# to create a new key
# ssh-keygen
# ad the key to defaults
# ssh-add /home/vagrant/.ssh/id_rsa

# ssh-copy-id -i thepublickey deadlineuser@workstationipaddress
# root required for gpu
# ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub root@192.168.92.12
# otherwise deadlineuser is fine
# ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub deadlineuser@192.168.92.12
# ssh-add ~/.ssh/id_rsa

# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-mount-nfs.yaml --extra-vars "ansible_become_pass=sompass"
# to attach mounts to ansible
# X ansible-playbook -i "$TF_VAR_inventory" ansible/node-centos-mounts.yaml -v -v --extra-vars "variable_host=localhost variable_user=vagrant --skip-tags 'cloud_install local_install_onsite_mounts'

# ansible-playbook -i "$TF_VAR_inventory" ansible/node-centos-mounts.yaml -v -v --extra-vars "variable_host=workstation1 variable_user=deadlineuser hostname=workstation1 ansible_ssh_private_key_file=$TF_VAR_onsite_workstation_ssh_private_key" --skip-tags 'cloud_install' --tags 'local_install local_install_onsite_mounts'

# cuda is optional, but in this case it should be installed before any other nvidia driver updates, only because installing cuda installs an old geforce driver currently.
# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-gpu-init-cuda.yaml -v --extra-vars "ansible_become_pass=sompass"
# nvidia driver
# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-gpu-init-geforce.yaml -v --extra-vars "ansible_become_pass=sompass"


# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-drivers.yaml -v --extra-vars "ansible_become_pass=sompass"
# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-software.yaml -v --extra-vars "ansible_become_pass=sompass"
# this only creates the user, no deadline install.
# ansible-playbook -i "$TF_VAR_inventory" secrets/modules/workstation/z8-deadlineuser.yaml --extra-vars "ansible_become_pass=sompass"

# 
# to configure aws cli on the workstation - this needs seperate aws priveledges for s3 read and write only, preferablly to specific existing buckets.  shouldn't be able to create buckets.
# ansible-playbook -i "$TF_VAR_inventory" ansible/init-centos-aws-cli.yaml -v --extra-vars "ansible_ssh_user=deadlineuser variable_host=workstation1 variable_user=deadlineuser hostname=workstation1 ansible_ssh_private_key_file=$TF_VAR_onsite_workstation_ssh_private_key"

# install z8 workstation drivers as root

# example with password inline, should consider transitioning to ssh only, no pass.
ansible-playbook -i "$TF_VAR_inventory" ansible/modules/houdini-module/houdini-module.yaml -v --extra-vars "sesi_username=$TF_VAR_sesi_username sesi_password=$TF_VAR_sesi_password variable_host=workstation1 variable_user=deadlineuser" --skip-tags "sync_scripts"


# X wont work, no rsa key ansible-playbook -i "$TF_VAR_inventory" ansible/deadline-worker-install.yaml --tags "onsite-install" --extra-vars "ansible_become_pass=somepass"
# X no ansible-playbook -i "$TF_VAR_inventory" ansible/deadline-worker-install.yaml -v --extra-vars "ansible_ssh_user=deadlineuser variable_host=workstation1 variable_user=deadlineuser hostname=workstation1 ansible_ssh_private_key_file=$TF_VAR_onsite_workstation_ssh_private_key"
# X didn't work ansible-playbook -i "$TF_VAR_inventory" ansible/deadline-worker-install.yaml --tags "onsite-install" --extra-vars "variable_host=workstation1 variable_user=deadlineuser ansible_ssh_private_key_file=$TF_VAR_onsite_workstation_ssh_private_key"
above didn't work  had to use root for some annoying reason.

# ansible-playbook -i "$TF_VAR_inventory" ansible/deadline-worker-install.yaml --tags "onsite-install" --extra-vars "variable_host=workstation1 variable_user=deadlineuser ansible_ssh_private_key_file=$TF_VAR_onsite_workstation_ssh_private_key"
# note mounts were removed/ commented out in this file.  may want to propogate them into a seperate playbook.

# ansible-playbook -i "secrets/modules/workstation/inventory/hosts" secrets/modules/workstation/bashrc.yaml --extra-vars "variable_user=deadlineuser ansible_become_pass=somepass"
