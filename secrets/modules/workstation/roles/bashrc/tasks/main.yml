
# - name: get the variable_user running the deploy
#   shell: |
#     whoami
#   register: variable_user_on_the_host
#   become: false

# - set_fact:
#     variable_user: "{{ variable_user_on_the_host.stdout }}"

- debug: var=variable_user

- name: insert marker start
  lineinfile:
    path: "/home/{{ variable_user }}/.bashrc"
    insertafter: "^#?.User specific aliases.*$"
    line: "# BEGIN ANSIBLE MANAGED BLOCK"
    backup: yes
  become: true

- name: insert marker end
  lineinfile:
    path: "/home/{{ variable_user }}/.bashrc"
    insertafter: "# BEGIN ANSIBLE MANAGED BLOCK"
    line: "# END ANSIBLE MANAGED BLOCK"
    create: true
    backup: yes
  become: true

- name: insert/update block in .bashrc
  blockinfile:
    path: "/home/{{ variable_user }}/.bashrc"
    backup: yes
    content: |
      alias refreshalias='source ~/.bashrc'
      alias editalias='code ~/.bashrc'
      #alias fhstopall='/data/mac/GitHub/aws-cli-scripts/shutdown_active_instances.py'
      alias fhstopall='terraform apply -var sleep=true --auto-approve'
      alias fhstart='/data/mac/GitHub/aws-cli-scripts/startup_sequence.py'
      alias backupuser='sudo rsync -avzh /home/user/ /data/volatile/z8_backup/user/ --delete'
      alias backupdeadlineuser='sudo rsync -avzh /home/deadlineuser/ /data/volatile/z8_backup/deadlineuser/ --delete'
      alias backupsys='sudo rsync -avzh /etc/ /data/volatile/z8_backup/etc/ --delete && sudo rsync -avzh /opt/ /data/linux/z8_backup/opt/ --delete && sudo rsync -avzh /var/ /data/linux/z8_backup/var/ --delete'

      alias fhsyncall='aws s3 sync /data/mac/GitHub/firehawk-active-directory s3://firehawk-ad/firehawk-active-directory --exclude ".git*"'
      alias fhsync_aws_softnas_cloudformation='aws s3 sync /data/mac/GitHub/aws-softnas-cloudformation s3://aws-softnas-cloudformation/ --exclude ".git*" --delete'
      alias fhs3link='echo https://s3-ap-southeast-2.amazonaws.com/firehawk-ad/firehawk-active-directory/templates/ad-master-1.template'
      #alias vpnconnect='su - & openvpn --config /home/user/client.ovpn'

      alias gogit='cd /data/mac/GitHub/firehawk-compute-batch'
      alias fhactive='cd /data/mac/GitHub/firehawk-compute-batch && terraform apply --auto-approve'
      alias fhsleep='cd /data/mac/GitHub/firehawk-compute-batch && terraform apply -var sleep=true --auto-approve'
      alias fhvpn='sudo service openvpn restart && ping 10.0.1.11'
      alias cl='cd `ls -tr | tail -1`'
      alias lt='ls -tr'
      alias deadlinercs='cd /opt/Thinkbox/Deadline10/bin && ./deadlinercs'
      alias deadlinemonitor='cd /opt/Thinkbox/Deadline10/bin && ./deadlinemonitor'
      alias deadlinepulse='cd /opt/Thinkbox/Deadline10/bin && ./deadlinepulse'
      alias licenses='cd /opt/hfs{{ houdini_major_version }}/ && source houdini_setup && hkey'
      
      #alias s3report="cat report.csv | awk -F, '{printf "%.2f GB %s %s \n", $7/(1024**3 )/24, $4, $2}' | sort -n"

      alias henv='cwd="$(pwd)" && cd /opt/hfs{{ houdini_major_version }}/ && source houdini_setup && cd $cwd'
      alias h='cwd="$(pwd)" && cd /opt/hfs{{ houdini_major_version }}/ && source houdini_setup && cd $cwd && houdinifx'

      alias tra='cd /prod/mhc/tra/0230/houdini'
      alias tra0230='export SHOW=man && export SEQ=tra && export SHOT=0230 && cd /prod/$SHOW/$SEQ/$SHOT/'
      alias hipfiles='cd /prod/$SHOW/$SEQ/$SHOT/houdini'
      alias hr='cwd="$(pwd)" && cd /opt/hfs{{ houdini_major_version }}/ && source houdini_setup && cd $cwd && houdinifx `ls -tr | tail -n 1`'

  become: true

      
# - name: source all changes
#   command: "source /home/{{ variable_user }}/.bashrc"